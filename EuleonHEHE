--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 2) then
			v6 = table.insert;
			v7 = nil;
			v7 = function(v26, v27)
				local v35 = 0;
				local v36;
				while true do
					if (v35 == 1) then
						return v5(v36);
					end
					if (v35 == 0) then
						v36 = {};
						for v51 = 1, #v26 do
							v6(v36, v0(v4(v1(v2(v26, v51, v51 + 1)), v1(v2(v27, 1 + ((v51 - 1) % #v27), 1 + ((v51 - 1) % #v27) + 1))) % 256));
						end
						v35 = 1;
					end
				end
			end;
			v24 = 3;
		end
		if (v24 == 3) then
			v8 = _G[v7("\243\89\64\166\204\229\83\92", "\135\54\46\211\161")];
			v9 = _G[v7("\78\193\31\55\83\210", "\61\181\109\94")][v7("\19\94\89\245", "\113\39\45\144\102\196")];
			v10 = _G[v7("\203\216\229\245\142\7", "\184\172\151\156\224\96")][v7("\223\129\239\21", "\188\233\142\103")];
			v24 = 4;
		end
		if (v24 == 4) then
			v11 = _G[v7("\38\200\80\67\59\219", "\85\188\34\42")][v7("\2\225\50", "\113\148\80\216")];
			v12 = _G[v7("\169\77\32\5\70\31", "\218\57\82\108\40\120")][v7("\127\197\98\116", "\24\182\23\22\55\149\71\64")];
			v13 = _G[v7("\1\107\222\18\48\48", "\114\31\172\123\94\87\197")][v7("\63\69\106", "\77\32\26\123\51\165")];
			v24 = 5;
		end
		if (v24 == 1) then
			v3 = bit32 or bit;
			v4 = v3.bxor;
			v5 = table.concat;
			v24 = 2;
		end
		if (v24 == 6) then
			v17 = _G[v7("\179\173\222\114\123\164\200", "\212\200\170\20\30\202\190\217")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\47\77\247\211\135\20\116\166\61\74\239\219", "\92\40\131\190\226\96\21\210")];
			v19 = _G[v7("\60\115\69\73\53", "\76\16\36\37\89\212")];
			v24 = 7;
		end
		if (v24 == 8) then
			v23 = nil;
			v23 = function(v30, v31, ...)
				local v37 = 0;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				local v49;
				local v50;
				while true do
					if (v37 == 3) then
						v47 = nil;
						v48 = nil;
						v49 = nil;
						v37 = 4;
					end
					if (1 == v37) then
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v37 = 2;
					end
					if (v37 == 0) then
						v38 = 0;
						v39 = nil;
						v40 = nil;
						v37 = 1;
					end
					if (4 == v37) then
						v50 = nil;
						while true do
							local v52 = 0;
							while true do
								if (v52 == 1) then
									if (v38 == 0) then
										local v53 = 0;
										while true do
											if (v53 == 0) then
												v39 = 1;
												v40 = nil;
												v53 = 1;
											end
											if (v53 == 1) then
												v30 = v12(v11(v30, 5), v7("\136\194", "\166\236\178\152\137\137\211\101"), function(v61)
													if (v9(v61, 1628 - (629 + 997)) == (59 + 20)) then
														local v107 = 0;
														local v108;
														while true do
															if (v107 == 0) then
																v108 = 0;
																while true do
																	if (v108 == 0) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v40 = v8(v11(v61, 1, 2 - 1));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v109 = 0;
														local v110;
														local v111;
														while true do
															if (v109 == 1) then
																while true do
																	if (v110 == 0) then
																		v111 = v10(v8(v61, 1455 - (28 + 252 + 1159)));
																		if v40 then
																			local v143 = 0;
																			local v144;
																			local v145;
																			while true do
																				if (v143 == 0) then
																					v144 = 0;
																					v145 = nil;
																					v143 = 1;
																				end
																				if (v143 == 1) then
																					while true do
																						local v172 = 0;
																						while true do
																							if (v172 == 0) then
																								if (v144 == 0) then
																									local v177 = 0;
																									while true do
																										if (v177 == 1) then
																											v144 = 1;
																											break;
																										end
																										if (v177 == 0) then
																											v145 = v13(v111, v40);
																											v40 = nil;
																											v177 = 1;
																										end
																									end
																								end
																								if (v144 == 1) then
																									return v145;
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																		else
																			return v111;
																		end
																		break;
																	end
																end
																break;
															end
															if (v109 == 0) then
																v110 = 0;
																v111 = nil;
																v109 = 1;
															end
														end
													end
												end);
												v38 = 1;
												break;
											end
										end
									end
									if (v38 == 4) then
										local v54 = 0;
										while true do
											if (v54 == 0) then
												v45 = function()
													local v69 = 0;
													local v70;
													local v71;
													local v72;
													local v73;
													local v74;
													local v75;
													local v76;
													while true do
														if (2 == v69) then
															v74 = nil;
															v75 = nil;
															v69 = 3;
														end
														if (1 == v69) then
															v72 = nil;
															v73 = nil;
															v69 = 2;
														end
														if (v69 == 0) then
															v70 = 1930 - (55 + 1875);
															v71 = nil;
															v69 = 1;
														end
														if (3 == v69) then
															v76 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		if (v70 == 3) then
																			local v128 = 0;
																			while true do
																				if (v128 == 0) then
																					if (v75 == 0) then
																						if (v74 == ((0 - 0) + (373 - (317 + 56)))) then
																							return v76 * (324 - (232 + 92));
																						else
																							local v175 = 0;
																							local v176;
																							while true do
																								if (v175 == 0) then
																									v176 = 0;
																									while true do
																										if (v176 == (0 + 0)) then
																											v75 = (205 + 1225) - (759 + 20 + 650);
																											v73 = 0 + 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v75 == (3253 - (244 + 962))) then
																						return ((v74 == 0) and (v76 * (((1 + 0 + 0) - 0) / 0))) or (v76 * NaN);
																					end
																					return v16(v76, v75 - (308 + (911 - (98 + 98)))) * (v73 + (v74 / ((4 - 2) ^ 52)));
																				end
																			end
																		end
																		if (v70 == 1) then
																			local v129 = 0;
																			while true do
																				if (v129 == 1) then
																					v70 = 2;
																					break;
																				end
																				if (v129 == 0) then
																					v73 = 39 - ((1758 - (1444 + 289)) + (1374 - (799 + 562)));
																					v74 = (v41(v72, ((4 - 2) - 1) + ((68 + 340) - (36 + 372)), 40 - (47 - 27)) * ((1452 - (1239 + 211)) ^ 32)) + v71;
																					v129 = 1;
																				end
																			end
																		end
																		v118 = 1;
																	end
																	if (v118 == 1) then
																		if (v70 == (3 - 1)) then
																			local v130 = 0;
																			while true do
																				if (v130 == 0) then
																					v75 = v41(v72, (15 + 6 + 66) - 66, (53 - 38) + (28 - 12));
																					v76 = ((v41(v72, 32) == (1 + 0)) and -1) or ((11 - (8 + 0)) - (2 + 0));
																					v130 = 1;
																				end
																				if (1 == v130) then
																					v70 = 3;
																					break;
																				end
																			end
																		end
																		if (v70 == (0 - 0)) then
																			local v131 = 0;
																			while true do
																				if (v131 == 0) then
																					v71 = v44();
																					v72 = v44();
																					v131 = 1;
																				end
																				if (v131 == 1) then
																					v70 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v46 = nil;
												v54 = 1;
											end
											if (v54 == 1) then
												v46 = function(v62)
													local v77 = 0;
													local v78;
													local v79;
													local v80;
													while true do
														if (v77 == 0) then
															v78 = 0;
															v79 = nil;
															v77 = 1;
														end
														if (1 == v77) then
															v80 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (1 == v119) then
																		if (v78 == (1560 - (97 + 1461))) then
																			local v132 = 0;
																			while true do
																				if (v132 == 0) then
																					v80 = {};
																					for v150 = (1 - 0) + 0, #v79 do
																						v80[v150] = v10(v9(v11(v79, v150, v150)));
																					end
																					v132 = 1;
																				end
																				if (v132 == 1) then
																					v78 = 3 - 0;
																					break;
																				end
																			end
																		end
																		if (v78 == (1 + 2)) then
																			return v14(v80);
																		end
																		break;
																	end
																	if (v119 == 0) then
																		if (v78 == (1 + 0)) then
																			local v133 = 0;
																			while true do
																				if (v133 == 0) then
																					v79 = v11(v30, v39, (v39 + v62) - ((345 + (3468 - 2105)) - (1446 + (2213 - ((1456 - 714) + 892 + 318)))));
																					v39 = v39 + v62;
																					v133 = 1;
																				end
																				if (v133 == 1) then
																					v78 = 2;
																					break;
																				end
																			end
																		end
																		if (0 == v78) then
																			local v134 = 0;
																			while true do
																				if (v134 == 1) then
																					v78 = 1;
																					break;
																				end
																				if (v134 == 0) then
																					v79 = nil;
																					if not v62 then
																						local v173 = 0;
																						local v174;
																						while true do
																							if (v173 == 0) then
																								v174 = 0;
																								while true do
																									if ((730 - (157 + 573)) == v174) then
																										v62 = v44();
																										if (v62 == (1118 - ((1585 - (871 + 194)) + 102 + 496))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v134 = 1;
																				end
																			end
																		end
																		v119 = 1;
																	end
																end
															end
															break;
														end
													end
												end;
												v38 = 5;
												break;
											end
										end
									end
									v52 = 2;
								end
								if (v52 == 2) then
									if (v38 == 7) then
										local v55 = 0;
										while true do
											if (v55 == 0) then
												v50 = function(v63, v64, v65)
													local v81 = 0;
													local v82;
													local v83;
													local v84;
													local v85;
													while true do
														if (v81 == 0) then
															v82 = 0;
															v83 = nil;
															v81 = 1;
														end
														if (v81 == 1) then
															v84 = nil;
															v85 = nil;
															v81 = 2;
														end
														if (v81 == 2) then
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		if (v82 == 1) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					v85 = v63[8 - (1397 - (1233 + 159))];
																					return function(...)
																						local v152 = 0;
																						local v153;
																						local v154;
																						local v155;
																						local v156;
																						local v157;
																						local v158;
																						while true do
																							if (1 == v152) then
																								v155 = nil;
																								v156 = nil;
																								v152 = 2;
																							end
																							if (v152 == 3) then
																								while true do
																									if (v153 == 1) then
																										local v178 = 0;
																										while true do
																											if (v178 == 0) then
																												v156 = {...};
																												v157 = v20("#", ...) - 1;
																												v178 = 1;
																											end
																											if (v178 == 1) then
																												v153 = 2;
																												break;
																											end
																										end
																									end
																									if (v153 == 0) then
																										local v179 = 0;
																										while true do
																											if (v179 == 0) then
																												v154 = 1;
																												v155 = -1;
																												v179 = 1;
																											end
																											if (1 == v179) then
																												v153 = 1;
																												break;
																											end
																										end
																									end
																									if (v153 == 3) then
																										_G['A'], _G['B'] = v48(v19(v158));
																										if not _G['A'][1 + 0 + 0] then
																											local v183 = 0;
																											local v184;
																											local v185;
																											while true do
																												if (0 == v183) then
																													v184 = 0;
																													v185 = nil;
																													v183 = 1;
																												end
																												if (v183 == 1) then
																													while true do
																														if (v184 == 0) then
																															v185 = v63[(1 - 0) + 3][v154] or "?";
																															error(v7("\212\222\88\201\108\243\157\79\210\110\232\207\10\193\104\167\230", "\135\189\42\160\28") .. v185 .. v7("\211\43", "\142\17\177\17\112") .. _G['A'][2]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 1 + (1 - 0), _G['B']);
																										end
																										break;
																									end
																									if (v153 == 2) then
																										local v180 = 0;
																										while true do
																											if (v180 == 1) then
																												v153 = 3;
																												break;
																											end
																											if (v180 == 0) then
																												v158 = nil;
																												v158 = function()
																													local v191 = 0;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													local v201;
																													while true do
																														if (v191 == 1) then
																															v196 = {};
																															v197 = {};
																															v198 = {};
																															for v202 = 0, v157 do
																																if (v202 >= v194) then
																																	v196[v202 - v194] = v156[v202 + (3 - 2) + (1797 - (1040 + 757))];
																																else
																																	v198[v202] = v156[v202 + ((1752 - (676 + 1075)) - 0)];
																																end
																															end
																															v191 = 2;
																														end
																														if (v191 == 0) then
																															v192 = v83;
																															v193 = v84;
																															v194 = v85;
																															v195 = v48;
																															v191 = 1;
																														end
																														if (v191 == 2) then
																															v199 = (v157 - v194) + 1 + 0;
																															v200 = nil;
																															v201 = nil;
																															while true do
																																local v203 = 0;
																																local v204;
																																while true do
																																	if (v203 == 0) then
																																		v204 = 0;
																																		while true do
																																			if (0 == v204) then
																																				local v221 = 0;
																																				while true do
																																					if (1 == v221) then
																																						v204 = 1;
																																						break;
																																					end
																																					if (v221 == 0) then
																																						v200 = v192[v154];
																																						v201 = v200[1];
																																						v221 = 1;
																																					end
																																				end
																																			end
																																			if (v204 == 1) then
																																				if (v201 <= 31) then
																																					if (v201 <= 15) then
																																						if (v201 <= (4 + 3)) then
																																							if (v201 <= (1296 - (751 + 542))) then
																																								if (v201 <= (1 + 0)) then
																																									if (v201 > (0 - 0)) then
																																										local v232 = 0;
																																										local v233;
																																										local v234;
																																										while true do
																																											if (v232 == 1) then
																																												while true do
																																													if (0 == v233) then
																																														v234 = v200[2 + 0];
																																														v198[v234] = v198[v234]();
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																											if (v232 == 0) then
																																												v233 = 0;
																																												v234 = nil;
																																												v232 = 1;
																																											end
																																										end
																																									else
																																										v198[v200[2 + 0]] = v198[v200[8 - 5]] - v198[v200[15 - 11]];
																																									end
																																								elseif (v201 == (1 + 1)) then
																																									v154 = v200[3];
																																								else
																																									v198[v200[(3490 - 1770) - (643 + 345 + 730)]] = v64[v200[1410 - (89 + 1072 + 246)]];
																																								end
																																							elseif (v201 <= (1134 - (119 + 1010))) then
																																								if (v201 == (3 + (457 - (288 + 168)))) then
																																									for v375 = v200[2], v200[(2 - 0) + 1] do
																																										v198[v375] = nil;
																																									end
																																								else
																																									v198[v200[2]] = -v198[v200[12 - 9]];
																																								end
																																							elseif (v201 == 6) then
																																								local v240 = 0;
																																								local v241;
																																								local v242;
																																								local v243;
																																								local v244;
																																								local v245;
																																								while true do
																																									if (v240 == 0) then
																																										v241 = 0;
																																										v242 = nil;
																																										v240 = 1;
																																									end
																																									if (v240 == 1) then
																																										v243 = nil;
																																										v244 = nil;
																																										v240 = 2;
																																									end
																																									if (v240 == 2) then
																																										v245 = nil;
																																										while true do
																																											if (v241 == 2) then
																																												for v437 = v242, v155 do
																																													local v438 = 0;
																																													local v439;
																																													while true do
																																														if (v438 == 0) then
																																															v439 = 0;
																																															while true do
																																																if (v439 == 0) then
																																																	v245 = v245 + (1 - 0);
																																																	v198[v437] = v243[v245];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v241 == 1) then
																																												local v392 = 0;
																																												while true do
																																													if (0 == v392) then
																																														v155 = (v244 + v242) - ((3 - 2) - (0 - 0));
																																														v245 = 0 - 0;
																																														v392 = 1;
																																													end
																																													if (1 == v392) then
																																														v241 = 2;
																																														break;
																																													end
																																												end
																																											end
																																											if (0 == v241) then
																																												local v393 = 0;
																																												while true do
																																													if (v393 == 1) then
																																														v241 = 1;
																																														break;
																																													end
																																													if (v393 == 0) then
																																														v242 = v200[2];
																																														v243, v244 = v195(v198[v242](v21(v198, v242 + 1, v200[3 + 0])));
																																														v393 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								v198[v200[2 + 0]][v198[v200[(4 + 3) - 4]]] = v200[1 + 1 + 2];
																																							end
																																						elseif (v201 <= ((2793 - (260 + 607)) - (554 + 327 + (3613 - 2579)))) then
																																							if (v201 <= (5 + 4)) then
																																								if (v201 == (1623 - (1005 + 610))) then
																																									if v198[v200[1550 - ((1867 - 1315) + (4181 - 3185))]] then
																																										v154 = v154 + (1254 - (277 + 116 + (3141 - 2281)));
																																									else
																																										v154 = v200[(1 - 0) + (8 - 6)];
																																									end
																																								else
																																									local v248 = 0;
																																									local v249;
																																									local v250;
																																									local v251;
																																									while true do
																																										if (v248 == 1) then
																																											v251 = nil;
																																											while true do
																																												if (1 == v249) then
																																													for v440 = v250 + (2 - 1), v200[953 - (901 + 49)] do
																																														v15(v251, v198[v440]);
																																													end
																																													break;
																																												end
																																												if (v249 == 0) then
																																													local v394 = 0;
																																													while true do
																																														if (v394 == 1) then
																																															v249 = 1;
																																															break;
																																														end
																																														if (v394 == 0) then
																																															v250 = v200[601 - (10 + 589)];
																																															v251 = v198[v250];
																																															v394 = 1;
																																														end
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v248) then
																																											v249 = 0;
																																											v250 = nil;
																																											v248 = 1;
																																										end
																																									end
																																								end
																																							elseif (v201 == (16 - 6)) then
																																								v198[v200[590 - (551 + 37)]] = v198[v200[(2628 - 1538) - ((146 - 89) + 1030)]][v200[4]];
																																							else
																																								v198[v200[1674 - (722 + 950)]] = v198[v200[3]] % v198[v200[4]];
																																							end
																																						elseif (v201 <= (8 + 5)) then
																																							if (v201 == ((2581 - (28 + 583)) - ((2696 - 752) + 14))) then
																																								local v255 = 0;
																																								local v256;
																																								local v257;
																																								local v258;
																																								local v259;
																																								while true do
																																									if (v255 == 0) then
																																										v256 = 0;
																																										v257 = nil;
																																										v255 = 1;
																																									end
																																									if (v255 == 1) then
																																										v258 = nil;
																																										v259 = nil;
																																										v255 = 2;
																																									end
																																									if (v255 == 2) then
																																										while true do
																																											if (v256 == 1) then
																																												v259 = v198[v257 + (1860 - ((2267 - (531 + 116)) + 238))];
																																												if (v259 > (0 - 0)) then
																																													if (v258 > v198[v257 + 1 + 0]) then
																																														v154 = v200[2 + (2 - 1)];
																																													else
																																														v198[v257 + (685 - (413 + 269))] = v258;
																																													end
																																												elseif (v258 < v198[v257 + (2 - (1 - 0))]) then
																																													v154 = v200[1052 - (243 + 666 + 43 + 97)];
																																												else
																																													v198[v257 + 3] = v258;
																																												end
																																												break;
																																											end
																																											if (v256 == 0) then
																																												local v396 = 0;
																																												while true do
																																													if (0 == v396) then
																																														v257 = v200[2];
																																														v258 = v198[v257];
																																														v396 = 1;
																																													end
																																													if (v396 == 1) then
																																														v256 = 1;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								local v260 = 0;
																																								local v261;
																																								local v262;
																																								local v263;
																																								local v264;
																																								while true do
																																									if (v260 == 1) then
																																										v263 = nil;
																																										v264 = nil;
																																										v260 = 2;
																																									end
																																									if (v260 == 2) then
																																										while true do
																																											if (v261 == 1) then
																																												v264 = 0;
																																												for v441 = v262, v200[4] do
																																													local v442 = 0;
																																													local v443;
																																													while true do
																																														if (v442 == 0) then
																																															v443 = 0;
																																															while true do
																																																if (v443 == 0) then
																																																	v264 = v264 + (2 - 1);
																																																	v198[v441] = v263[v264];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v261 == 0) then
																																												local v397 = 0;
																																												while true do
																																													if (v397 == 1) then
																																														v261 = 1;
																																														break;
																																													end
																																													if (v397 == 0) then
																																														v262 = v200[2];
																																														v263 = {v198[v262](v21(v198, v262 + (1 - 0), v155))};
																																														v397 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v260 == 0) then
																																										v261 = 0;
																																										v262 = nil;
																																										v260 = 1;
																																									end
																																								end
																																							end
																																						elseif (v201 > 14) then
																																							v64[v200[1 + 0 + 1 + 1]] = v198[v200[2]];
																																						else
																																							local v267 = 0;
																																							local v268;
																																							local v269;
																																							while true do
																																								if (v267 == 1) then
																																									while true do
																																										if (0 == v268) then
																																											v269 = v200[5 - 3];
																																											v198[v269](v21(v198, v269 + 1, v200[(1626 - (1151 + 468)) - (1459 - (1006 + 449))]));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v267 == 0) then
																																									v268 = 0;
																																									v269 = nil;
																																									v267 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= (753 - (20 + 710))) then
																																						if (v201 <= 19) then
																																							if (v201 <= (67 - 50)) then
																																								if (v201 > (1895 - (33 + 31 + (5904 - 4089)))) then
																																									if (v198[v200[2 + (1203 - (842 + 361))]] ~= v198[v200[(3789 - 2262) - (1353 + 84 + 86)]]) then
																																										v154 = v154 + 1;
																																									else
																																										v154 = v200[3];
																																									end
																																								else
																																									local v270 = 0;
																																									local v271;
																																									local v272;
																																									local v273;
																																									while true do
																																										if (v270 == 0) then
																																											v271 = 0;
																																											v272 = nil;
																																											v270 = 1;
																																										end
																																										if (1 == v270) then
																																											v273 = nil;
																																											while true do
																																												if (v271 == 0) then
																																													local v399 = 0;
																																													while true do
																																														if (v399 == 0) then
																																															v272 = v200[2];
																																															v273 = v198[v200[9 - 6]];
																																															v399 = 1;
																																														end
																																														if (1 == v399) then
																																															v271 = 1;
																																															break;
																																														end
																																													end
																																												end
																																												if (v271 == 1) then
																																													v198[v272 + 1] = v273;
																																													v198[v272] = v273[v198[v200[4]]];
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v201 > (46 - 28)) then
																																								local v274 = 0;
																																								local v275;
																																								local v276;
																																								local v277;
																																								while true do
																																									if (v274 == 1) then
																																										v277 = nil;
																																										while true do
																																											if (v275 == 0) then
																																												local v403 = 0;
																																												while true do
																																													if (v403 == 1) then
																																														v275 = 1;
																																														break;
																																													end
																																													if (v403 == 0) then
																																														v276 = v200[2 + 0];
																																														v277 = v198[v276];
																																														v403 = 1;
																																													end
																																												end
																																											end
																																											if (v275 == 1) then
																																												for v444 = v276 + ((1079 + 54) - (705 + 427)), v155 do
																																													v15(v277, v198[v444]);
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (0 == v274) then
																																										v275 = 0;
																																										v276 = nil;
																																										v274 = 1;
																																									end
																																								end
																																							else
																																								local v278 = 0;
																																								local v279;
																																								local v280;
																																								while true do
																																									if (0 == v278) then
																																										v279 = 0;
																																										v280 = nil;
																																										v278 = 1;
																																									end
																																									if (v278 == 1) then
																																										while true do
																																											if (v279 == 0) then
																																												v280 = v200[1 + 1];
																																												v198[v280] = v198[v280](v198[v280 + 1]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 <= 21) then
																																							if (v201 > 20) then
																																								local v281 = 0;
																																								local v282;
																																								local v283;
																																								while true do
																																									if (1 == v281) then
																																										while true do
																																											if (v282 == 0) then
																																												v283 = v200[2 + 0];
																																												do
																																													return v198[v283](v21(v198, v283 + 1, v200[3]));
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v281 == 0) then
																																										v282 = 0;
																																										v283 = nil;
																																										v281 = 1;
																																									end
																																								end
																																							else
																																								local v284 = 0;
																																								local v285;
																																								local v286;
																																								while true do
																																									if (v284 == 1) then
																																										while true do
																																											if (v285 == 0) then
																																												v286 = v200[5 - 3];
																																												v198[v286](v198[v286 + (3 - 2)]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v284 == 0) then
																																										v285 = 0;
																																										v286 = nil;
																																										v284 = 1;
																																									end
																																								end
																																							end
																																						elseif (v201 > 22) then
																																							v198[v200[5 - (3 + 0)]] = v65[v200[3]];
																																						else
																																							local v289 = 0;
																																							local v290;
																																							local v291;
																																							while true do
																																								if (v289 == 1) then
																																									while true do
																																										if (0 == v290) then
																																											v291 = v200[1 + (1326 - (1256 + 69))];
																																											v198[v291] = v198[v291](v21(v198, v291 + 1 + 0, v155));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v289 == 0) then
																																									v290 = 0;
																																									v291 = nil;
																																									v289 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= 27) then
																																						if (v201 <= 25) then
																																							if (v201 > 24) then
																																								local v292 = 0;
																																								local v293;
																																								local v294;
																																								local v295;
																																								local v296;
																																								while true do
																																									if (v292 == 2) then
																																										while true do
																																											if (v293 == 1) then
																																												v296 = 0 + 0;
																																												for v445 = v294, v200[1 + 1 + 2] do
																																													local v446 = 0;
																																													local v447;
																																													while true do
																																														if (v446 == 0) then
																																															v447 = 0;
																																															while true do
																																																if (0 == v447) then
																																																	v296 = v296 + (2 - 1);
																																																	v198[v445] = v295[v296];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (v293 == 0) then
																																												local v410 = 0;
																																												while true do
																																													if (v410 == 1) then
																																														v293 = 1;
																																														break;
																																													end
																																													if (v410 == 0) then
																																														v294 = v200[2];
																																														v295 = {v198[v294](v21(v198, v294 + 1, v200[3]))};
																																														v410 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v292 == 0) then
																																										v293 = 0;
																																										v294 = nil;
																																										v292 = 1;
																																									end
																																									if (v292 == 1) then
																																										v295 = nil;
																																										v296 = nil;
																																										v292 = 2;
																																									end
																																								end
																																							else
																																								local v297 = 0;
																																								local v298;
																																								local v299;
																																								local v300;
																																								local v301;
																																								local v302;
																																								while true do
																																									if (v297 == 0) then
																																										v298 = 0;
																																										v299 = nil;
																																										v297 = 1;
																																									end
																																									if (v297 == 1) then
																																										v300 = nil;
																																										v301 = nil;
																																										v297 = 2;
																																									end
																																									if (v297 == 2) then
																																										v302 = nil;
																																										while true do
																																											if (v298 == 0) then
																																												local v411 = 0;
																																												while true do
																																													if (v411 == 1) then
																																														v298 = 1;
																																														break;
																																													end
																																													if (v411 == 0) then
																																														v299 = v200[2 - 0];
																																														v300, v301 = v195(v198[v299](v21(v198, v299 + 1, v155)));
																																														v411 = 1;
																																													end
																																												end
																																											end
																																											if (v298 == 1) then
																																												local v412 = 0;
																																												while true do
																																													if (0 == v412) then
																																														v155 = (v301 + v299) - 1;
																																														v302 = (144 + 1679) - (128 + 1695);
																																														v412 = 1;
																																													end
																																													if (v412 == 1) then
																																														v298 = 2;
																																														break;
																																													end
																																												end
																																											end
																																											if (2 == v298) then
																																												for v448 = v299, v155 do
																																													local v449 = 0;
																																													local v450;
																																													while true do
																																														if (0 == v449) then
																																															v450 = 0;
																																															while true do
																																																if (v450 == 0) then
																																																	v302 = v302 + ((791 + 725) - ((1896 - (183 + 1178)) + 980));
																																																	v198[v448] = v300[v302];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 == 26) then
																																							local v303 = 0;
																																							local v304;
																																							local v305;
																																							local v306;
																																							while true do
																																								if (v303 == 1) then
																																									v306 = nil;
																																									while true do
																																										if (1 == v304) then
																																											v198[v305 + 1] = v306;
																																											v198[v305] = v306[v200[(2552 - (1162 + 333)) - ((580 - 231) + 704)]];
																																											break;
																																										end
																																										if (v304 == 0) then
																																											local v416 = 0;
																																											while true do
																																												if (v416 == 0) then
																																													v305 = v200[2];
																																													v306 = v198[v200[7 - 4]];
																																													v416 = 1;
																																												end
																																												if (v416 == 1) then
																																													v304 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v303 == 0) then
																																									v304 = 0;
																																									v305 = nil;
																																									v303 = 1;
																																								end
																																							end
																																						elseif (v200[9 - 7] == v198[v200[4]]) then
																																							v154 = v154 + (930 - (695 + 234));
																																						else
																																							v154 = v200[4 - 1];
																																						end
																																					elseif (v201 <= (25 + 4)) then
																																						if (v201 == (54 - 26)) then
																																							v198[v200[2]] = v198[v200[3]] + v198[v200[1712 - (1432 + 276)]];
																																						else
																																							v198[v200[542 - (377 + 163)]] = v200[980 - (129 + 848)] + v198[v200[1 + 3]];
																																						end
																																					elseif (v201 > (25 + 5)) then
																																						local v309 = 0;
																																						local v310;
																																						local v311;
																																						local v312;
																																						local v313;
																																						while true do
																																							if (v309 == 2) then
																																								while true do
																																									if (v310 == 0) then
																																										local v417 = 0;
																																										while true do
																																											if (v417 == 1) then
																																												v310 = 1;
																																												break;
																																											end
																																											if (v417 == 0) then
																																												v311 = v200[2 + (1211 - (572 + 639))];
																																												v312 = v198[v311 + 1 + 1 + 0 + 0];
																																												v417 = 1;
																																											end
																																										end
																																									end
																																									if (v310 == 2) then
																																										if (v312 > ((294 + 764) - (210 + (1419 - 571)))) then
																																											if (v313 <= v198[v311 + 1]) then
																																												local v502 = 0;
																																												local v503;
																																												while true do
																																													if (v502 == 0) then
																																														v503 = 0;
																																														while true do
																																															if (v503 == 0) then
																																																v154 = v200[(638 + 147) - (14 + 8 + 760)];
																																																v198[v311 + 3] = v313;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																										elseif (v313 >= v198[v311 + 1]) then
																																											local v504 = 0;
																																											local v505;
																																											while true do
																																												if (v504 == 0) then
																																													v505 = 0;
																																													while true do
																																														if (v505 == 0) then
																																															v154 = v200[3 + 0];
																																															v198[v311 + (35 - (10 + 22))] = v313;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v310 == 1) then
																																										local v418 = 0;
																																										while true do
																																											if (1 == v418) then
																																												v310 = 2;
																																												break;
																																											end
																																											if (v418 == 0) then
																																												v313 = v198[v311] + v312;
																																												v198[v311] = v313;
																																												v418 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (0 == v309) then
																																								v310 = 0;
																																								v311 = nil;
																																								v309 = 1;
																																							end
																																							if (v309 == 1) then
																																								v312 = nil;
																																								v313 = nil;
																																								v309 = 2;
																																							end
																																						end
																																					else
																																						v198[v200[2]] = v198[v200[4 - (1 + 0)]] * v200[4];
																																					end
																																				elseif (v201 <= (106 - 59)) then
																																					if (v201 <= (26 + 13)) then
																																						if (v201 <= (1 + 7 + 27)) then
																																							if (v201 <= ((4198 - 2245) - ((1597 - 1256) + 1579))) then
																																								if (v201 == (6 + 26)) then
																																									v198[v200[2]] = v200[13 - 10] ~= (0 - 0);
																																								else
																																									v198[v200[4 - 2]] = #v198[v200[1 + 2]];
																																								end
																																							elseif (v201 > 34) then
																																								do
																																									return;
																																								end
																																							else
																																								v198[v200[2]] = v198[v200[2 + 1]] % v200[4];
																																							end
																																						elseif (v201 <= 37) then
																																							if (v201 == 36) then
																																								if (v198[v200[2]] < v198[v200[(4097 - 3060) - ((912 - 688) + (2515 - (945 + 761)))]]) then
																																									v154 = v154 + 1;
																																								else
																																									v154 = v200[3];
																																								end
																																							else
																																								local v318 = 0;
																																								local v319;
																																								local v320;
																																								local v321;
																																								local v322;
																																								local v323;
																																								local v324;
																																								while true do
																																									if (v318 == 3) then
																																										while true do
																																											if (2 == v319) then
																																												local v419 = 0;
																																												while true do
																																													if (v419 == 1) then
																																														v319 = 3;
																																														break;
																																													end
																																													if (0 == v419) then
																																														for v506 = 1 + 0, v321 do
																																															v198[v322 + v506] = v323[v506];
																																														end
																																														v324 = v323[163 - (141 + 21)];
																																														v419 = 1;
																																													end
																																												end
																																											end
																																											if (0 == v319) then
																																												local v420 = 0;
																																												while true do
																																													if (1 == v420) then
																																														v319 = 1;
																																														break;
																																													end
																																													if (0 == v420) then
																																														v320 = v200[2];
																																														v321 = v200[4];
																																														v420 = 1;
																																													end
																																												end
																																											end
																																											if (v319 == 3) then
																																												if v324 then
																																													local v465 = 0;
																																													local v466;
																																													while true do
																																														if (v465 == 0) then
																																															v466 = 0;
																																															while true do
																																																if (v466 == 0) then
																																																	v198[v322] = v324;
																																																	v154 = v200[3];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												else
																																													v154 = v154 + ((343 - 195) - (139 + 8));
																																												end
																																												break;
																																											end
																																											if (v319 == 1) then
																																												local v421 = 0;
																																												while true do
																																													if (v421 == 1) then
																																														v319 = 2;
																																														break;
																																													end
																																													if (v421 == 0) then
																																														v322 = v320 + 2;
																																														v323 = {v198[v320](v198[v320 + (1 - 0) + 0], v198[v322])};
																																														v421 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v318 == 0) then
																																										v319 = 0;
																																										v320 = nil;
																																										v318 = 1;
																																									end
																																									if (v318 == 1) then
																																										v321 = nil;
																																										v322 = nil;
																																										v318 = 2;
																																									end
																																									if (v318 == 2) then
																																										v323 = nil;
																																										v324 = nil;
																																										v318 = 3;
																																									end
																																								end
																																							end
																																						elseif (v201 == (1717 - (1266 + (629 - 216)))) then
																																							do
																																								return v198[v200[5 - 3]];
																																							end
																																						else
																																							v198[v200[(1506 - (73 + 1427)) - (1844 - (434 + 1406))]] = v198[v200[(1574 - (523 + 1043)) - 5]] - v200[2 + 2];
																																						end
																																					elseif (v201 <= (154 - 111)) then
																																						if (v201 <= 41) then
																																							if (v201 > 40) then
																																								v198[v200[2]] = v200[1 + (1248 - (1121 + 125))] / v200[17 - 13];
																																							else
																																								v198[v200[2]] = v200[3];
																																							end
																																						elseif (v201 > ((155 + 3) - 116)) then
																																							local v329 = 0;
																																							local v330;
																																							local v331;
																																							local v332;
																																							local v333;
																																							while true do
																																								if (v329 == 2) then
																																									while true do
																																										if (v330 == 1) then
																																											v333 = 0 + 0;
																																											for v451 = v331, v200[4] do
																																												local v452 = 0;
																																												local v453;
																																												while true do
																																													if (v452 == 0) then
																																														v453 = 0;
																																														while true do
																																															if (v453 == 0) then
																																																v333 = v333 + 1;
																																																v198[v451] = v332[v333];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v330 == 0) then
																																											local v422 = 0;
																																											while true do
																																												if (v422 == 0) then
																																													v331 = v200[2];
																																													v332 = {v198[v331](v198[v331 + (1 - 0) + 0])};
																																													v422 = 1;
																																												end
																																												if (1 == v422) then
																																													v330 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v329 == 1) then
																																									v332 = nil;
																																									v333 = nil;
																																									v329 = 2;
																																								end
																																								if (v329 == 0) then
																																									v330 = 0;
																																									v331 = nil;
																																									v329 = 1;
																																								end
																																							end
																																						else
																																							local v334 = 0;
																																							local v335;
																																							while true do
																																								if (v334 == 0) then
																																									v335 = 0;
																																									while true do
																																										if (v335 == 0) then
																																											v198[v200[2]] = v200[3] ~= ((1023 - (831 + 192)) - 0);
																																											v154 = v154 + 1;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v201 <= (23 + 22)) then
																																						if (v201 > (37 + 7)) then
																																							v198[v200[(2297 - 1240) - ((387 - (9 + 157)) + 834)]] = v198[v200[3]][v198[v200[5 - (1 - 0)]]];
																																						else
																																							v198[v200[(2 - 1) + 1]] = v198[v200[(1058 - (335 + 47)) - (203 + 380 + 90)]] + v200[1991 - (678 + 1309)];
																																						end
																																					elseif (v201 == (444 - (260 + 138))) then
																																						if (v198[v200[1 + 1]] < v198[v200[8 - 4]]) then
																																							v154 = v200[(1 + 2) - (0 + 0)];
																																						else
																																							v154 = v154 + 1;
																																						end
																																					else
																																						local v339 = 0;
																																						local v340;
																																						local v341;
																																						local v342;
																																						local v343;
																																						local v344;
																																						while true do
																																							if (v339 == 0) then
																																								v340 = 0;
																																								v341 = nil;
																																								v339 = 1;
																																							end
																																							if (1 == v339) then
																																								v342 = nil;
																																								v343 = nil;
																																								v339 = 2;
																																							end
																																							if (2 == v339) then
																																								v344 = nil;
																																								while true do
																																									if (v340 == 0) then
																																										local v424 = 0;
																																										while true do
																																											if (v424 == 1) then
																																												v340 = 1;
																																												break;
																																											end
																																											if (v424 == 0) then
																																												v341 = v200[2];
																																												v342, v343 = v195(v198[v341](v198[v341 + 1]));
																																												v424 = 1;
																																											end
																																										end
																																									end
																																									if (2 == v340) then
																																										for v454 = v341, v155 do
																																											local v455 = 0;
																																											local v456;
																																											while true do
																																												if (v455 == 0) then
																																													v456 = 0;
																																													while true do
																																														if (v456 == 0) then
																																															v344 = v344 + (1 - 0);
																																															v198[v454] = v342[v344];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v340 == 1) then
																																										local v425 = 0;
																																										while true do
																																											if (0 == v425) then
																																												v155 = (v343 + v341) - 1;
																																												v344 = 0;
																																												v425 = 1;
																																											end
																																											if (v425 == 1) then
																																												v340 = 2;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v201 <= 55) then
																																					if (v201 <= 51) then
																																						if (v201 <= (4 + 45)) then
																																							if (v201 == (1821 - (1549 + 224))) then
																																								v198[v200[2]] = v198[v200[272 - (259 + 10)]] / v200[4];
																																							else
																																								local v346 = 0;
																																								local v347;
																																								local v348;
																																								local v349;
																																								while true do
																																									if (v346 == 1) then
																																										v349 = nil;
																																										while true do
																																											if (v347 == 0) then
																																												local v426 = 0;
																																												while true do
																																													if (0 == v426) then
																																														v348 = v200[3];
																																														v349 = v198[v348];
																																														v426 = 1;
																																													end
																																													if (v426 == 1) then
																																														v347 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v347 == 1) then
																																												for v457 = v348 + ((142 + 156) - (60 + 179 + 58)), v200[4] do
																																													v349 = v349 .. v198[v457];
																																												end
																																												v198[v200[(2373 - (203 + 1415)) - (289 + 464)]] = v349;
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v346 == 0) then
																																										v347 = 0;
																																										v348 = nil;
																																										v346 = 1;
																																									end
																																								end
																																							end
																																						elseif (v201 == (39 + 11)) then
																																							if (v198[v200[2]] ~= v200[3 + (3 - 2)]) then
																																								v154 = v154 + 1;
																																							else
																																								v154 = v200[(5 + 0) - 2];
																																							end
																																						else
																																							v198[v200[2]] = v198[v200[1 + 2]] * v198[v200[91 - ((122 - 83) + 48)]];
																																						end
																																					elseif (v201 <= (153 - (1828 - (690 + 1038)))) then
																																						if (v201 > 52) then
																																							if (v198[v200[5 - 3]] <= v198[v200[4]]) then
																																								v154 = v154 + 1;
																																							else
																																								v154 = v200[1 + 2];
																																							end
																																						elseif not v198[v200[2 + 0]] then
																																							v154 = v154 + (1 - 0);
																																						else
																																							v154 = v200[11 - 8];
																																						end
																																					elseif (v201 > (17 + 37)) then
																																						v198[v200[(2 + 3) - (6 - 3)]][v198[v200[3]]] = v198[v200[(11 + 0) - 7]];
																																					elseif (v198[v200[2]] == v198[v200[4]]) then
																																						v154 = v154 + (129 - (8 + 120));
																																					else
																																						v154 = v200[3];
																																					end
																																				elseif (v201 <= (223 - 164)) then
																																					if (v201 <= ((1352 - (939 + 320)) - (118 - 82))) then
																																						if (v201 > (250 - (239 - 45))) then
																																							local v353 = 0;
																																							local v354;
																																							local v355;
																																							while true do
																																								if (v353 == 0) then
																																									v354 = 0;
																																									v355 = nil;
																																									v353 = 1;
																																								end
																																								if (v353 == 1) then
																																									while true do
																																										if (v354 == 0) then
																																											v355 = v200[2 + 0];
																																											do
																																												return v21(v198, v355, v155);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v356 = 0;
																																							local v357;
																																							local v358;
																																							local v359;
																																							local v360;
																																							while true do
																																								if (v356 == 1) then
																																									v359 = nil;
																																									v360 = nil;
																																									v356 = 2;
																																								end
																																								if (v356 == 2) then
																																									while true do
																																										if (v357 == 2) then
																																											for v458 = 3 - 2, v200[1 + 1 + 2] do
																																												local v459 = 0;
																																												local v460;
																																												local v461;
																																												while true do
																																													if (0 == v459) then
																																														v460 = 0;
																																														v461 = nil;
																																														v459 = 1;
																																													end
																																													if (v459 == 1) then
																																														while true do
																																															if (v460 == 1) then
																																																if (v461[1] == (821 - (443 + (1385 - (569 + 497))))) then
																																																	v360[v458 - (1 - 0)] = {v198,v461[3]};
																																																else
																																																	v360[v458 - 1] = {v64,v461[8 - (14 - 9)]};
																																																end
																																																v197[#v197 + (1141 - (10 + (3234 - 2104)))] = v360;
																																																break;
																																															end
																																															if (0 == v460) then
																																																local v528 = 0;
																																																while true do
																																																	if (v528 == 0) then
																																																		v154 = v154 + 1;
																																																		v461 = v192[v154];
																																																		v528 = 1;
																																																	end
																																																	if (v528 == 1) then
																																																		v460 = 1;
																																																		break;
																																																	end
																																																end
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											v198[v200[1476 - (874 + 600)]] = v50(v358, v359, v65);
																																											break;
																																										end
																																										if (v357 == 0) then
																																											local v430 = 0;
																																											while true do
																																												if (v430 == 0) then
																																													v358 = v193[v200[1996 - (1843 + 150)]];
																																													v359 = nil;
																																													v430 = 1;
																																												end
																																												if (1 == v430) then
																																													v357 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v357 == 1) then
																																											local v431 = 0;
																																											while true do
																																												if (v431 == 1) then
																																													v357 = 2;
																																													break;
																																												end
																																												if (v431 == 0) then
																																													v360 = {};
																																													v359 = v18({}, {[v7("\201\106\223\254\180\243\77", "\150\53\182\144\208")]=function(v493, v494)
																																														local v509 = 0;
																																														local v510;
																																														local v511;
																																														while true do
																																															if (v509 == 0) then
																																																v510 = 0;
																																																v511 = nil;
																																																v509 = 1;
																																															end
																																															if (1 == v509) then
																																																while true do
																																																	if (v510 == 0) then
																																																		local v538 = 0;
																																																		while true do
																																																			if (v538 == 0) then
																																																				v511 = v360[v494];
																																																				return v511[1 + 0 + (0 - 0)][v511[2]];
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end,[v7("\242\75\202\33\231\63\23\136\200\108", "\173\20\164\68\144\86\121\236")]=function(v493, v494, v495)
																																														local v512 = 0;
																																														local v513;
																																														local v514;
																																														while true do
																																															if (v512 == 0) then
																																																v513 = 0;
																																																v514 = nil;
																																																v512 = 1;
																																															end
																																															if (v512 == 1) then
																																																while true do
																																																	if (v513 == 0) then
																																																		v514 = v360[v494];
																																																		v514[1][v514[(878 + 495) - ((2876 - (1145 + 826)) + 466)]] = v495;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end});
																																													v431 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v356 == 0) then
																																									v357 = 0;
																																									v358 = nil;
																																									v356 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 == (165 - 107)) then
																																						local v361 = 0;
																																						local v362;
																																						local v363;
																																						while true do
																																							if (0 == v361) then
																																								v362 = 0;
																																								v363 = nil;
																																								v361 = 1;
																																							end
																																							if (v361 == 1) then
																																								while true do
																																									if (v362 == 0) then
																																										v363 = v200[2];
																																										v198[v363] = v198[v363](v21(v198, v363 + 1 + (0 - 0), v200[3]));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						v198[v200[2]] = v198[v200[3]];
																																					end
																																				elseif (v201 <= (4 + 57)) then
																																					if (v201 > (1313 - (155 + 1098))) then
																																						v198[v200[1179 - (201 + 397 + (1647 - (700 + 368)))]] = {};
																																					else
																																						local v367 = 0;
																																						local v368;
																																						local v369;
																																						local v370;
																																						local v371;
																																						while true do
																																							if (v367 == 2) then
																																								while true do
																																									if (v368 == 1) then
																																										v371 = v200[7 - 4];
																																										for v462 = 1, v371 do
																																											v370[v462] = v198[v369 + v462];
																																										end
																																										break;
																																									end
																																									if (v368 == 0) then
																																										local v435 = 0;
																																										while true do
																																											if (v435 == 1) then
																																												v368 = 1;
																																												break;
																																											end
																																											if (v435 == 0) then
																																												v369 = v200[2];
																																												v370 = v198[v369];
																																												v435 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v367 == 1) then
																																								v370 = nil;
																																								v371 = nil;
																																								v367 = 2;
																																							end
																																							if (v367 == 0) then
																																								v368 = 0;
																																								v369 = nil;
																																								v367 = 1;
																																							end
																																						end
																																					end
																																				elseif (v201 <= (180 - 118)) then
																																					local v372 = 0;
																																					local v373;
																																					local v374;
																																					while true do
																																						if (v372 == 0) then
																																							v373 = 0;
																																							v374 = nil;
																																							v372 = 1;
																																						end
																																						if (v372 == 1) then
																																							while true do
																																								if (v373 == 0) then
																																									v374 = v200[2];
																																									v198[v374](v21(v198, v374 + (785 - (370 + 414)), v155));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				elseif (v201 == (161 - (239 - 141))) then
																																					if (v198[v200[(1 - 0) + 1]] == v200[(56 + 6) - (9 + (169 - 120))]) then
																																						v154 = v154 + (1 - 0);
																																					else
																																						v154 = v200[3];
																																					end
																																				else
																																					local v386 = 0;
																																					local v387;
																																					local v388;
																																					while true do
																																						if (0 == v386) then
																																							v387 = 0;
																																							v388 = nil;
																																							v386 = 1;
																																						end
																																						if (v386 == 1) then
																																							while true do
																																								if (v387 == 0) then
																																									v388 = v200[3 - (701 - (213 + 487))];
																																									do
																																										return v21(v198, v388, v388 + v200[1 + 2]);
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				v154 = v154 + 1;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																													end
																												end;
																												v180 = 1;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v152 == 2) then
																								v157 = nil;
																								v158 = nil;
																								v152 = 3;
																							end
																							if (v152 == 0) then
																								v153 = 0;
																								v154 = nil;
																								v152 = 1;
																							end
																						end
																					end;
																				end
																			end
																		end
																		if (v82 == 0) then
																			local v136 = 0;
																			while true do
																				if (v136 == 0) then
																					v83 = v63[(760 + 1161) - (7 + 76 + 883 + 954)];
																					v84 = v63[2];
																					v136 = 1;
																				end
																				if (1 == v136) then
																					v82 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												return v50(v49(), {}, v31)(...);
											end
										end
									end
									if (v38 == 5) then
										local v56 = 0;
										while true do
											if (1 == v56) then
												v48 = function(...)
													return {...}, v20("#", ...);
												end;
												v38 = 6;
												break;
											end
											if (0 == v56) then
												v47 = v44;
												v48 = nil;
												v56 = 1;
											end
										end
									end
									v52 = 3;
								end
								if (3 == v52) then
									if (3 == v38) then
										local v57 = 0;
										while true do
											if (v57 == 0) then
												v44 = nil;
												v44 = function()
													local v86 = 0;
													local v87;
													local v88;
													local v89;
													local v90;
													local v91;
													while true do
														if (v86 == 1) then
															v89 = nil;
															v90 = nil;
															v86 = 2;
														end
														if (v86 == 0) then
															v87 = 0;
															v88 = nil;
															v86 = 1;
														end
														if (v86 == 2) then
															v91 = nil;
															while true do
																local v121 = 0;
																while true do
																	if (0 == v121) then
																		if (v87 == 1) then
																			return (v91 * ((7656964 - 5060068) + 14180320)) + (v90 * ((225682 - 158556) - (842 + (2102 - 1354)))) + (v89 * (1844 - (640 + 948))) + v88;
																		end
																		if (0 == v87) then
																			local v137 = 0;
																			while true do
																				if (v137 == 0) then
																					v88, v89, v90, v91 = v9(v30, v39, v39 + (319 - (101 + 172 + 43)) + 0);
																					v39 = v39 + (132 - (14 + 114)) + (905 - (851 + 54));
																					v137 = 1;
																				end
																				if (v137 == 1) then
																					v87 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v57 = 1;
											end
											if (v57 == 1) then
												v45 = nil;
												v38 = 4;
												break;
											end
										end
									end
									if (v38 == 1) then
										local v58 = 0;
										while true do
											if (v58 == 0) then
												v41 = nil;
												v41 = function(v66, v67, v68)
													if v68 then
														local v112 = 0;
														local v113;
														local v114;
														while true do
															if (1 == v112) then
																while true do
																	if (v113 == (1666 - (1532 + 134))) then
																		local v126 = 0;
																		while true do
																			if (v126 == 0) then
																				v114 = (v66 / (((3 - (1226 - (47 + 1177))) + ((68 - (57 + 9)) - (1179 - (541 + 637)))) ^ (v67 - (1 + 0 + (0 - 0))))) % (((4 - (1 + 2)) + 1) ^ (((v68 - (((1 - 0) - 0) - 0)) - (v67 - ((2 - 1) + 0 + 0 + 0))) + 1));
																				return v114 - (v114 % 1);
																			end
																		end
																	end
																end
																break;
															end
															if (v112 == 0) then
																v113 = 0;
																v114 = nil;
																v112 = 1;
															end
														end
													else
														local v115 = 0;
														local v116;
														local v117;
														while true do
															if (1 == v115) then
																while true do
																	if (v116 == 0) then
																		local v127 = 0;
																		while true do
																			if (v127 == 0) then
																				v117 = (7 - 5) ^ (v67 - ((1 + 0) - 0));
																				return (((v66 % (v117 + v117)) >= v117) and (1 + 0)) or ((1596 - (818 + 437)) - ((358 - (23 + 41)) + 47));
																			end
																		end
																	end
																end
																break;
															end
															if (0 == v115) then
																v116 = 0;
																v117 = nil;
																v115 = 1;
															end
														end
													end
												end;
												v58 = 1;
											end
											if (1 == v58) then
												v42 = nil;
												v38 = 2;
												break;
											end
										end
									end
									break;
								end
								if (v52 == 0) then
									if (v38 == 2) then
										local v59 = 0;
										while true do
											if (1 == v59) then
												v43 = function()
													local v92 = 0;
													local v93;
													local v94;
													local v95;
													while true do
														if (v92 == 0) then
															v93 = 0 + 0;
															v94 = nil;
															v92 = 1;
														end
														if (v92 == 1) then
															v95 = nil;
															while true do
																local v122 = 0;
																while true do
																	if (0 == v122) then
																		if (v93 == (1701 - (972 + 728))) then
																			return (v95 * (503 - (705 - (78 + 380)))) + v94;
																		end
																		if (v93 == (1885 - (722 + 1163))) then
																			local v138 = 0;
																			while true do
																				if (v138 == 1) then
																					v93 = 1;
																					break;
																				end
																				if (0 == v138) then
																					v94, v95 = v9(v30, v39, v39 + 2 + 0);
																					v39 = v39 + (1738 - (855 + (2255 - 1374)));
																					v138 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v38 = 3;
												break;
											end
											if (v59 == 0) then
												v42 = function()
													local v96 = 0;
													local v97;
													local v98;
													while true do
														if (v96 == 0) then
															v97 = 1324 - (38 + 1286);
															v98 = nil;
															v96 = 1;
														end
														if (v96 == 1) then
															while true do
																local v123 = 0;
																while true do
																	if (v123 == 0) then
																		if (v97 == (0 + 0)) then
																			local v139 = 0;
																			while true do
																				if (v139 == 0) then
																					v98 = v9(v30, v39, v39);
																					v39 = v39 + 1;
																					v139 = 1;
																				end
																				if (v139 == 1) then
																					v97 = 1;
																					break;
																				end
																			end
																		end
																		if (v97 == 1) then
																			return v98;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v43 = nil;
												v59 = 1;
											end
										end
									end
									if (6 == v38) then
										local v60 = 0;
										while true do
											if (v60 == 1) then
												v50 = nil;
												v38 = 7;
												break;
											end
											if (v60 == 0) then
												v49 = nil;
												v49 = function()
													local v99 = 0;
													local v100;
													local v101;
													local v102;
													local v103;
													local v104;
													local v105;
													local v106;
													while true do
														if (v99 == 3) then
															v106 = nil;
															while true do
																local v124 = 0;
																while true do
																	if (v124 == 1) then
																		if (v100 == 2) then
																			local v140 = 0;
																			while true do
																				if (v140 == 1) then
																					for v159 = 1, v44() do
																						v103[v159] = v44();
																					end
																					return v104;
																				end
																				if (0 == v140) then
																					for v161 = 1 - 0, v44() do
																						local v162 = 0;
																						local v163;
																						local v164;
																						while true do
																							if (v162 == 0) then
																								v163 = 0;
																								v164 = nil;
																								v162 = 1;
																							end
																							if (v162 == 1) then
																								while true do
																									if (v163 == 0) then
																										v164 = v42();
																										if (v41(v164, 1, 1) == (0 + 0 + 0)) then
																											local v186 = 0;
																											local v187;
																											local v188;
																											local v189;
																											local v190;
																											while true do
																												if (1 == v186) then
																													v189 = nil;
																													v190 = nil;
																													v186 = 2;
																												end
																												if (v186 == 0) then
																													v187 = 0;
																													v188 = nil;
																													v186 = 1;
																												end
																												if (v186 == 2) then
																													while true do
																														if (v187 == 2) then
																															local v205 = 0;
																															while true do
																																if (1 == v205) then
																																	v187 = 3;
																																	break;
																																end
																																if (v205 == 0) then
																																	if (v41(v189, 1, 1) == ((58 + 7) - ((1252 - (592 + 601)) + 5))) then
																																		v190[(1331 - 793) - (209 + 29 + 298)] = v106[v190[1 + 1]];
																																	end
																																	if (v41(v189, 6 - 4, 2) == (883 - ((443 - 247) + (2353 - (1485 + 182))))) then
																																		v190[10 - (23 - 16)] = v106[v190[3]];
																																	end
																																	v205 = 1;
																																end
																															end
																														end
																														if (v187 == 3) then
																															if (v41(v189, 104 - (63 + 1 + 37), 3) == (69 - (60 + 8))) then
																																v190[4] = v106[v190[109 - (14 + (143 - 52))]];
																															end
																															v101[v161] = v190;
																															break;
																														end
																														if (1 == v187) then
																															local v207 = 0;
																															while true do
																																if (v207 == 1) then
																																	v187 = 2;
																																	break;
																																end
																																if (v207 == 0) then
																																	v190 = {v43(),v43(),nil,nil};
																																	if (v188 == 0) then
																																		local v219 = 0;
																																		local v220;
																																		while true do
																																			if (v219 == 0) then
																																				v220 = 0;
																																				while true do
																																					if (v220 == 0) then
																																						v190[(9 + 1) - 7] = v43();
																																						v190[588 - (424 + 160)] = v43();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v188 == ((1 + 1) - 1)) then
																																		v190[3] = v44();
																																	elseif (v188 == (8 - 6)) then
																																		v190[3] = v44() - (2 ^ 16);
																																	elseif (v188 == ((4025 - 2522) - (765 + (1377 - 642)))) then
																																		local v228 = 0;
																																		local v229;
																																		while true do
																																			if (v228 == 0) then
																																				v229 = 0;
																																				while true do
																																					if (v229 == 0) then
																																						v190[907 - (677 + 227)] = v44() - ((5 - 3) ^ (1542 - (36 + 1490)));
																																						v190[4] = v43();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v207 = 1;
																																end
																															end
																														end
																														if (v187 == 0) then
																															local v208 = 0;
																															while true do
																																if (v208 == 1) then
																																	v187 = 1;
																																	break;
																																end
																																if (v208 == 0) then
																																	v188 = v41(v164, 2, 11 - 8);
																																	v189 = v41(v164, 1 + 0 + 3, 21 - (19 - 4));
																																	v208 = 1;
																																end
																															end
																														end
																													end
																													break;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					for v165 = 1, v44() do
																						v102[v165 - 1] = v49();
																					end
																					v140 = 1;
																				end
																			end
																		end
																		break;
																	end
																	if (0 == v124) then
																		if (0 == v100) then
																			local v141 = 0;
																			while true do
																				if (v141 == 0) then
																					v101 = {};
																					v102 = {};
																					v141 = 1;
																				end
																				if (v141 == 1) then
																					v103 = {};
																					v104 = {v101,v102,nil,v103};
																					v141 = 2;
																				end
																				if (v141 == 2) then
																					v100 = 1;
																					break;
																				end
																			end
																		end
																		if (v100 == 1) then
																			local v142 = 0;
																			while true do
																				if (v142 == 1) then
																					for v167 = 1585 - (942 + 642), v105 do
																						local v168 = 0;
																						local v169;
																						local v170;
																						local v171;
																						while true do
																							if (0 == v168) then
																								v169 = 0;
																								v170 = nil;
																								v168 = 1;
																							end
																							if (v168 == 1) then
																								v171 = nil;
																								while true do
																									if (v169 == 1) then
																										if (v170 == ((187 - 110) - ((347 - (141 + 137)) + (16 - 9)))) then
																											v171 = v42() ~= 0;
																										elseif (v170 == 2) then
																											v171 = v45();
																										elseif (v170 == 3) then
																											v171 = v46();
																										end
																										v106[v167] = v171;
																										break;
																									end
																									if (v169 == 0) then
																										local v182 = 0;
																										while true do
																											if (v182 == 0) then
																												v170 = v42();
																												v171 = nil;
																												v182 = 1;
																											end
																											if (v182 == 1) then
																												v169 = 1;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					v104[3] = v42();
																					v142 = 2;
																				end
																				if (v142 == 0) then
																					v105 = v44();
																					v106 = {};
																					v142 = 1;
																				end
																				if (v142 == 2) then
																					v100 = 2;
																					break;
																				end
																			end
																		end
																		v124 = 1;
																	end
																end
															end
															break;
														end
														if (1 == v99) then
															v102 = nil;
															v103 = nil;
															v99 = 2;
														end
														if (v99 == 2) then
															v104 = nil;
															v105 = nil;
															v99 = 3;
														end
														if (v99 == 0) then
															v100 = 0;
															v101 = nil;
															v99 = 1;
														end
													end
												end;
												v60 = 1;
											end
										end
									end
									v52 = 1;
								end
							end
						end
						break;
					end
					if (v37 == 2) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v37 = 3;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 7) then
			v20 = _G[v7("\16\78\233\179\201\23", "\99\43\133\214\170")];
			v21 = _G[v7("\222\241\213\169\164\192", "\171\159\165\200\199")] or _G[v7("\26\218\182\177\162", "\110\187\212\221\199\197")][v7("\87\177\192\70\166\73", "\34\223\176\39\197")];
			v22 = _G[v7("\228\48\16\75\253\61\27\76", "\144\95\126\62")];
			v24 = 8;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v24 = 1;
		end
		if (v24 == 5) then
			v14 = _G[v7("\59\86\20\50\227", "\79\55\118\94\134\114\56\64")][v7("\25\209\57\75\197\164", "\122\190\87\40\164\208\45")];
			v15 = _G[v7("\210\122\193\236\81", "\166\27\163\128\52")][v7("\34\53\52\47\195\76", "\75\91\71\74\177\56\111")];
			v16 = _G[v7("\89\187\184\55", "\52\218\204\95\57")][v7("\46\202\253\104\241", "\66\174\152\16\129\37\138")];
			v24 = 6;
		end
	end
end
